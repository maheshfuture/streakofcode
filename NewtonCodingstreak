day 1- 13-05-2023
question1-
Find X
Time Limit: 2 sec
Memory Limit: 128000 kB
Problem Statement
Let's consider a table consisting of n rows and n columns. The cell located at the intersection of i- th row and j- th column contains number i × j. The rows and columns are numbered starting from 1. You are given a positive integer x. Your task is to count the number of cells in a table that contain number x.
Input
The input consists of two space- separated integers n and x.

Constraints
1 ≤ n ≤ 105
1 ≤ x ≤ 109
Output
Print a single number: the number of times x occurs in the table.
Example
Sample Input 1
10 5
Sample Output 1
2

Sample Input 2
6 12
Sample Output 2
4
solution-
#include<bits/stdc++.h>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;

    int ans = 0;
    for(int i=1; i<=n; i++) {
        if(m % i == 0 && m/i <= n) {
            ans++;
        }
    }

    cout << ans << endl;
    return 0;
}
day2 14/05/23
King's Army Leaders
Time Limit: 2 sec
Memory Limit: 128000 kB
Problem Statement
In a kingdom, there is a war going on between two armies led by two kings. Each king has an army of positive integers. Your task as a military advisor is to find the number of leaders of each army.

An element of the army is a leader if it is greater than or equal to all the soldiers on its right side. The rightmost soldier of each army is always a leader. The more the number of leaders more the chances of winning the war, predict the winner of the battle.
Input
The first line contains the size of the armies n1, n2.
The next line contains n1 space- separated integers for the army members of the first army.
The next line contains n2 space- separated integers for the army members of the second army.
Output
A single integer 1 if the first army wins else 2. They will never tie.
Example
Input:
6 6
1 3 2 5 7 3
1 2 3 8 7 6
Output :
2
Explanation:
First army contains 2 leaders(7, 3) and the second army contains 3 leaders (8, 7, 6) so we print 2.
solution:
#include <iostream>
#include <vector>
using namespace std;

int main() {
    int n1, n2;
    cin >> n1 >> n2;
    vector<int> a(n1), b(n2);
    for (int i = 0; i < n1; i++)
        cin >> a[i];
    for (int i = 0; i < n2; i++)
        cin >> b[i];
    int cnt1 = 0, cnt2 = 0;
    for (int i = 0; i < n1; i++) {
        bool leader = true;
        for (int j = i+1; j < n1; j++) {
            if (a[j] > a[i]) {
                leader = false;
                break;
            }
        }
        if (leader) cnt1++;
    }
    for (int i = 0; i < n2; i++) {
        bool leader = true;
        for (int j = i+1; j < n2; j++) {
            if (b[j] > b[i]) {
                leader = false;
                break;
            }
        }
        if (leader) cnt2++;
    }
    if (cnt1 > cnt2)
        cout << "1" << endl;
    else
        cout << "2" << endl;
    return 0;
}
